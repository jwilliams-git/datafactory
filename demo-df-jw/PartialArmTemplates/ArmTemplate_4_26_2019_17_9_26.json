{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "demo-df-jw"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Raw_Yelp_Data_DF_Aggregate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReviewCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Price",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "LocationWithPriceCount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "State",
						"type": "char"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[YelpAggregateData]')]"
				}
			}
		},
		{
			"name": "[concat(parameters('factoryName'), '/Aggregate Yelp Data')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Raw_Yelp_Data_DF",
								"type": "DatasetReference"
							},
							"name": "RawYelpData",
							"script": "source(output(\n\t\tId as integer,\n\t\tYelpId as string,\n\t\tName as string,\n\t\tReviewCount as integer,\n\t\tRating as decimal(3,2),\n\t\tCategory as string,\n\t\tSearchLocationCity as string,\n\t\tSearchLocationState as string,\n\t\tPrice as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table') ~> RawYelpData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Raw_Yelp_Data_DF_Aggregate",
								"type": "DatasetReference"
							},
							"name": "SinkToSQL",
							"script": "AggregateReviewCountByRating sink(input(\n\t\tid as integer,\n\t\tReviewCount as integer,\n\t\tPrice as string,\n\t\tCity as string,\n\t\tLocationWithPriceCount as integer,\n\t\tState as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:true,\n\tkeys:['Price','SearchLocationCity','SearchLocationState'],\n\tmapColumn(\n\t\tReviewCount,\n\t\tPrice,\n\t\tCity = SearchLocationCity,\n\t\tLocationWithPriceCount,\n\t\tState = SearchLocationState\n\t)) ~> SinkToSQL"
						}
					],
					"transformations": [
						{
							"name": "FilterByReviewCount",
							"script": "RawYelpData filter(greaterOrEqual(ReviewCount,100)) ~> FilterByReviewCount"
						},
						{
							"name": "AggregateReviewCountByRating",
							"script": "FilterByReviewCount aggregate(groupBy(Price,\n\t\tSearchLocationCity,\n\t\tSearchLocationState),\n\tLocationWithPriceCount = count(Id),\n\t\tReviewCount = sum(ReviewCount)) ~> AggregateReviewCountByRating"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Raw_Yelp_Data_DF_Aggregate')]"
			]
		}
	]
}